name: CI

on: [push, pull_request, workflow_dispatch]

jobs:
  main:
    name: ${{ matrix.cc }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        cc: [clang-18, gcc-13, gcc-14]
        include:
          - cc: clang-18
            cxx: clang++-18
            gcov: llvm-cov-18 gcov
            os: ubuntu-latest
          - cc: gcc-13
            cxx: g++-13
            os: ubuntu-latest
          - cc: gcc-14
            cxx: g++-14
            gcov: gcov-14
            os: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Generate configure script
        run: sh autogen.sh
      - name: Configure, build and run tests
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
        run: ./configure --enable-coverage && make check
      - name: Create coverage information
        run: ${{ matrix.gcov }} -r *.cpp
        working-directory: tests
        if: ${{ matrix.gcov }}
      - name: Upload coverage information
        uses: codecov/codecov-action@fdcc8476540edceab3de004e990f80d881c6cc00 # v5.5.0
        with:
          name: ${{ matrix.cc }} on ${{ matrix.os }}
          token: ${{ secrets.CODECOV_TOKEN }}
        if: ${{ matrix.gcov }}
  msvc:
    name: Windows ${{ matrix.config }} build
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config: [Debug, Release]
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
      - name: Configure CMake
        run: cmake -B build
      - name: Build
        run: cmake --build build --config ${{ matrix.config }}
      - name: Run tests
        working-directory: build
        run: ctest -C ${{ matrix.config }}
